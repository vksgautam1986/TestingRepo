{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red23\green23\blue23;\red70\green137\blue204;
\red194\green126\blue101;\red202\green202\blue202;\red89\green138\blue67;\red67\green192\blue160;\red212\green214\blue154;
\red140\green211\blue254;}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c11765\c11765\c11765;\cssrgb\c33725\c61176\c83922;
\cssrgb\c80784\c56863\c47059;\cssrgb\c83137\c83137\c83137;\cssrgb\c41569\c60000\c33333;\cssrgb\c30588\c78824\c69020;\cssrgb\c86275\c86275\c66667;
\cssrgb\c61176\c86275\c99608;}
\paperw11900\paperh16840\margl1440\margr1440\vieww26820\viewh15060\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 "AppDelegate.h"\cf6 \cb1 \strokec6 \
\
\cf2 \cb3 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 <React/RCTBundleURLProvider.h>\cf6 \cb1 \strokec6 \
\cf2 \cb3 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 "Orientation.h"\cf6 \cb1 \strokec6 \
\cf2 \cb3 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 "RNSplashScreen.h"\cf6 \cb1 \strokec6 \
\cf2 \cb3 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 <RNGoogleSignin/RNGoogleSignin.h>\cf6 \cb1 \strokec6 \
\cf2 \cb3 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 <Firebase.h>\cf6 \cb1 \strokec6 \
\cf2 \cb3 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 <UserNotifications/UserNotifications.h>\cf6 \cb1 \strokec6 \
\cf2 \cb3 \strokec2 #import\cf4 \strokec4  \cf5 \strokec5 <RNCPushNotificationIOS.h>\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import "RNFirebaseNotifications.h"\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import "RNFirebaseMessaging.h"\cf6 \cb1 \strokec6 \
\
\cf7 \cb3 \strokec7 // #ifdef FB_SONARKIT_ENABLED\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import <FlipperKit/FlipperClient.h>\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import <FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h>\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import <FlipperKitUserDefaultsPlugin/FKUserDefaultsPlugin.h>\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import <FlipperKitNetworkPlugin/FlipperKitNetworkPlugin.h>\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import <SKIOSNetworkPlugin/SKIOSNetworkAdapter.h>\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #import <FlipperKitReactPlugin/FlipperKitReactPlugin.h>\cf6 \cb1 \strokec6 \
\
\cf7 \cb3 \strokec7 // static void InitializeFlipper(UIApplication *application) \{\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   FlipperClient *client = [FlipperClient sharedClient];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   SKDescriptorMapper *layoutDescriptorMapper = [[SKDescriptorMapper alloc] initWithDefaults];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [client addPlugin:[[FlipperKitLayoutPlugin alloc] initWithRootNode:application withDescriptorMapper:layoutDescriptorMapper]];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [client addPlugin:[[FKUserDefaultsPlugin alloc] initWithSuiteName:nil]];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [client addPlugin:[FlipperKitReactPlugin new]];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [client addPlugin:[[FlipperKitNetworkPlugin alloc] initWithNetworkAdapter:[SKIOSNetworkAdapter new]]];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [client start];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // \}\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #endif\cf6 \cb1 \strokec6 \
\
\cf4 \cb3 \strokec4 @implementation\cf6 \strokec6  \cf8 \strokec8 AppDelegate\cf6 \cb1 \strokec6 \
\
\cb3 - (\cf4 \strokec4 BOOL\cf6 \strokec6 )\cf9 \strokec9 application:\cf6 \strokec6 (UIApplication *)\cf10 \strokec10 application\cf6 \strokec6  \cf9 \strokec9 didFinishLaunchingWithOptions:\cf6 \strokec6 (\cf8 \strokec8 NSDictionary\cf6 \strokec6  *)\cf10 \strokec10 launchOptions\cf6 \cb1 \strokec6 \
\cb3 \{\cb1 \
\cb3   \cf4 \strokec4 self\cf6 \strokec6 .\cf10 \strokec10 moduleName\cf6 \strokec6  = \cf5 \strokec5 @"Swatched"\cf6 \strokec6 ;\cb1 \
\cf7 \cb3 \strokec7 // #ifdef FB_SONARKIT_ENABLED\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   InitializeFlipper(application);\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // #endif\cf6 \cb1 \strokec6 \
\cb3   \cb1 \
\cb3   [FIRApp configure];\cb1 \
\cb3   \cf7 \strokec7 // [RNFirebaseNotifications configure];\cf6 \cb1 \strokec6 \
\cb3   \cb1 \
\cb3  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:\cf4 \strokec4 self\cf6 \strokec6  launchOptions:launchOptions];\cb1 \
\cf7 \cb3 \strokec7 //  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //                                                   moduleName:@"Swatched"\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //                                            initialProperties:nil];\cf6 \cb1 \strokec6 \
\
\cf7 \cb3 \strokec7 //  if (@available(iOS 13.0, *)) \{\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //      rootView.backgroundColor = [UIColor systemBackgroundColor];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //  \} else \{\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //      rootView.backgroundColor = [UIColor whiteColor];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //  \}\cf6 \cb1 \strokec6 \
\
\
\cb3  \cf4 \strokec4 self\cf6 \strokec6 .\cf10 \strokec10 window\cf6 \strokec6  = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].\cf10 \strokec10 bounds\cf6 \strokec6 ];\cb1 \
\cf7 \cb3 \strokec7 //  UIViewController *rootViewController = [UIViewController new];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //  rootViewController.view = rootView;\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //  self.window.rootViewController = rootViewController;\cf6 \cb1 \strokec6 \
\cb3  [\cf4 \strokec4 self\cf6 \strokec6 .\cf10 \strokec10 window\cf6 \strokec6  makeKeyAndVisible];\cb1 \
\
\cb3   [RNSplashScreen show];\cb1 \
\
\
\cb3   UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];\cb1 \
\cb3   \cf10 \strokec10 center\cf6 \strokec6 .\cf10 \strokec10 delegate\cf6 \strokec6  = \cf4 \strokec4 self\cf6 \strokec6 ;\cb1 \
\
\cb3     \cf2 \strokec2 return\cf6 \strokec6  [\cf4 \strokec4 super\cf6 \strokec6  application:application didFinishLaunchingWithOptions:launchOptions];\cb1 \
\cb3 \}\cb1 \
\
\
\cf7 \cb3 \strokec7 // Required for the register event.\cf6 \cb1 \strokec6 \
\cb3 - (\cf4 \strokec4 void\cf6 \strokec6 )\cf9 \strokec9 application:\cf6 \strokec6 (UIApplication *)\cf10 \strokec10 application\cf6 \strokec6  \cf9 \strokec9 didRegisterForRemoteNotificationsWithDeviceToken:\cf6 \strokec6 (\cf8 \strokec8 NSData\cf6 \strokec6  *)\cf10 \strokec10 deviceToken\cf6 \cb1 \strokec6 \
\cb3 \{\cb1 \
\cb3  [RNCPushNotificationIOS didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\cb1 \
\cb3 \}\cb1 \
\cf7 \cb3 \strokec7 // Required for the notification event. You must call the completion handler after handling the remote notification.\cf6 \cb1 \strokec6 \
\cb3 - (\cf4 \strokec4 void\cf6 \strokec6 )\cf9 \strokec9 application:\cf6 \strokec6 (UIApplication *)\cf10 \strokec10 application\cf6 \strokec6  \cf9 \strokec9 didReceiveRemoteNotification:\cf6 \strokec6 (\cf8 \strokec8 NSDictionary\cf6 \strokec6  *)\cf10 \strokec10 userInfo\cf6 \cb1 \strokec6 \
\cf9 \cb3 \strokec9 fetchCompletionHandler:\cf6 \strokec6 (\cf4 \strokec4 void\cf6 \strokec6  (^)(UIBackgroundFetchResult))\cf10 \strokec10 completionHandler\cf6 \cb1 \strokec6 \
\cb3 \{\cb1 \
\cb3   [RNCPushNotificationIOS didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\cb1 \
\cb3 \}\cb1 \
\cf7 \cb3 \strokec7 // Required for the registrationError event.\cf6 \cb1 \strokec6 \
\cb3 - (\cf4 \strokec4 void\cf6 \strokec6 )\cf9 \strokec9 application:\cf6 \strokec6 (UIApplication *)\cf10 \strokec10 application\cf6 \strokec6  \cf9 \strokec9 didFailToRegisterForRemoteNotificationsWithError:\cf6 \strokec6 (\cf8 \strokec8 NSError\cf6 \strokec6  *)\cf10 \strokec10 error\cf6 \cb1 \strokec6 \
\cb3 \{\cb1 \
\cb3  [RNCPushNotificationIOS didFailToRegisterForRemoteNotificationsWithError:error];\cb1 \
\cb3 \}\cb1 \
\cf7 \cb3 \strokec7 // Required for localNotification event\cf6 \cb1 \strokec6 \
\cb3 - (\cf4 \strokec4 void\cf6 \strokec6 )\cf9 \strokec9 userNotificationCenter:\cf6 \strokec6 (UNUserNotificationCenter *)\cf10 \strokec10 center\cf6 \cb1 \strokec6 \
\cf9 \cb3 \strokec9 didReceiveNotificationResponse:\cf6 \strokec6 (UNNotificationResponse *)\cf10 \strokec10 response\cf6 \cb1 \strokec6 \
\cb3          \cf9 \strokec9 withCompletionHandler:\cf6 \strokec6 (\cf4 \strokec4 void\cf6 \strokec6  (^)(\cf4 \strokec4 void\cf6 \strokec6 ))\cf10 \strokec10 completionHandler\cf6 \cb1 \strokec6 \
\cb3 \{\cb1 \
\cb3   [RNCPushNotificationIOS didReceiveNotificationResponse:response];\cb1 \
\cb3 \}\cb1 \
\cf7 \cb3 \strokec7 // - (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification \{\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [[RNFirebaseNotifications instance] didReceiveLocalNotification:notification];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // \}\cf6 \cb1 \strokec6 \
\
\cf7 \cb3 \strokec7 // - (void)application:(UIApplication *)application didReceiveRemoteNotification:(nonnull NSDictionary *)userInfo\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //                                                        fetchCompletionHandler:(nonnull void (^)(UIBackgroundFetchResult))completionHandler\{\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [[RNFirebaseNotifications instance] didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // \}\cf6 \cb1 \strokec6 \
\
\cf7 \cb3 \strokec7 // - (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings \{\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 //   [[RNFirebaseMessaging instance] didRegisterUserNotificationSettings:notificationSettings];\cf6 \cb1 \strokec6 \
\cf7 \cb3 \strokec7 // \}\cf6 \cb1 \strokec6 \
\
\
\cb3 - (\cf8 \strokec8 NSURL\cf6 \strokec6  *)\cf9 \strokec9 sourceURLForBridge:\cf6 \strokec6 (RCTBridge *)\cf10 \strokec10 bridge\cf6 \cb1 \strokec6 \
\cb3 \{\cb1 \
\cf2 \cb3 \strokec2 #if\cf4 \strokec4  DEBUG\cf6 \cb1 \strokec6 \
\cb3   \cf2 \strokec2 return\cf6 \strokec6  [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:\cf5 \strokec5 @"index"\cf6 \strokec6 ];\cb1 \
\cf2 \cb3 \strokec2 #else\cf6 \cb1 \strokec6 \
\cb3   \cf2 \strokec2 return\cf6 \strokec6  [[\cf8 \strokec8 NSBundle\cf6 \strokec6  mainBundle] URLForResource:\cf5 \strokec5 @"main"\cf6 \strokec6  withExtension:\cf5 \strokec5 @"jsbundle"\cf6 \strokec6 ];\cb1 \
\cf2 \cb3 \strokec2 #endif\cf6 \cb1 \strokec6 \
\cb3 \}\cb1 \
\
\cb3 - (UIInterfaceOrientationMask)\cf9 \strokec9 application:\cf6 \strokec6 (UIApplication *)\cf10 \strokec10 application\cf6 \strokec6  \cf9 \strokec9 supportedInterfaceOrientationsForWindow:\cf6 \strokec6 (UIWindow *)\cf10 \strokec10 window\cf6 \strokec6  \{\cb1 \
\cb3   \cf2 \strokec2 return\cf6 \strokec6  [Orientation getOrientation];\cb1 \
\cb3 \}\cb1 \
\
\cf7 \cb3 \strokec7 //Called when a notification is delivered to a foreground app.\cf6 \cb1 \strokec6 \
\cb3 -(\cf4 \strokec4 void\cf6 \strokec6 )\cf9 \strokec9 userNotificationCenter:\cf6 \strokec6 (UNUserNotificationCenter *)\cf10 \strokec10 center\cf6 \strokec6  \cf9 \strokec9 willPresentNotification:\cf6 \strokec6 (UNNotification *)\cf10 \strokec10 notification\cf6 \strokec6  \cf9 \strokec9 withCompletionHandler:\cf6 \strokec6 (\cf4 \strokec4 void\cf6 \strokec6  (^)(UNNotificationPresentationOptions options))\cf10 \strokec10 completionHandler\cf6 \cb1 \strokec6 \
\cb3 \{\cb1 \
\cb3    \cf7 \strokec7 //Still call the javascript onNotification handler so it can display the new message right away\cf6 \cb1 \strokec6 \
\cb3     \cf9 \strokec9 completionHandler\cf6 \strokec6 (UNNotificationPresentationOptionSound | UNNotificationPresentationOptionAlert | UNNotificationPresentationOptionBadge);\cb1 \
\
\cb3 \}\cb1 \
\
\
\cb3 - (\cf4 \strokec4 BOOL\cf6 \strokec6 )\cf9 \strokec9 application:\cf6 \strokec6 (UIApplication *)\cf10 \strokec10 application\cf6 \strokec6  \cf9 \strokec9 openURL:\cf6 \strokec6 (\cf4 \strokec4 nonnull\cf6 \strokec6  \cf8 \strokec8 NSURL\cf6 \strokec6  *)\cf10 \strokec10 url\cf6 \strokec6  \cf9 \strokec9 options:\cf6 \strokec6 (\cf4 \strokec4 nonnull\cf6 \strokec6  \cf8 \strokec8 NSDictionary\cf6 \strokec6 <NSString *,id> *)\cf10 \strokec10 options\cf6 \strokec6  \{\cb1 \
\cb3   \cf2 \strokec2 return\cf6 \strokec6  [RNGoogleSignin application:application openURL:url options:options];\cb1 \
\cf7 \cb3 \strokec7 //  ||[[FBSDKApplicationDelegate sharedInstance] application:application openURL:url options:options]\cf6 \cb1 \strokec6 \
\cb3 \}\cb1 \
\cf4 \cb3 \strokec4 @end\cf6 \cb1 \strokec6 \
\
}